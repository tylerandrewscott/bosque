}else{pop_temp = NA;sc_temp=NA}
interconnects_temp = sum(as.numeric(inter_temp$`# I/Cw/other PWS`))
cn_temp = base_page %>% html_nodes(css_cn) %>% html_text(trim=T) %>% matrix(.,ncol=2,byrow=T) %>% .[-1,] %>% matrix(.,ncol=2) %>% data.frame(.,stringsAsFactors = F) %>% mutate(CN_ID = paste('CN',1:nrow(.),sep='_'))
org_cn_temp = cn_temp %>% dplyr::select(-X2) %>% spread(CN_ID,X1)
colnames(org_cn_temp) = gsub('CN_','CN_ORG_',colnames(org_cn_temp))
id_cn_temp = cn_temp %>% dplyr::select(-X1) %>% spread(CN_ID,X2)
cn_bind_temp = cbind(org_cn_temp,id_cn_temp)
df = data.frame(PWS_ID = str_extract(quers[x],'TX[0-9]{1,}'),
cbind(matrix(base_page %>% html_nodes(css_owner) %>% html_text(trim=T) ,nrow = 1,dimnames = list(x,'Owner_Type')),
matrix(base_page %>% html_nodes(css_rn) %>% html_text(trim=T) ,nrow=1,dimnames = list(x,c('PWS_ID_EX','PWS_NAME','RN'))),
rbind(flow_temp),
cn_bind_temp,
pop_temp,sc_temp),
Interconnections = interconnects_temp,
stringsAsFactors = F)
df})
},cl = 8)
owner_list
owner_list = pblapply(seq_along(quers),function(x) {
print(x)
rm(list = grep('temp',ls(),value=T))
tryCatch({
base_page = quers[x] %>% read_html()
flow_temp = base_page %>% html_nodes(css_flow) %>% html_text(trim=T) %>% matrix(.,nrow=2,byrow = T)
colnames(flow_temp) <- flow_temp[1,]
flow_temp = flow_temp[-1,]
inter_temp = base_page %>% html_nodes(css_inter) %>% html_text(trim=T) #%>% matrix(.,nrow=2,byrow = T)
table_nodes = base_page %>% html_nodes('table')
table_nodes = table_nodes[!sapply(sapply(seq_along(table_nodes),function(t) tryCatch({html_table(table_nodes[[t]],fill=T,trim=T)},error = function(e) NULL)),is.null)]
table_list = html_table(table_nodes,trim=T,fill=T)
inter_temp = table_list[[which(grepl('w/other PWS',table_list,fixed = T ))[2]]]
colnames(inter_temp) <- inter_temp[1,]
inter_temp = inter_temp[-1,]
if(nrow(inter_temp)>0){pop_temp = inter_temp %>% dplyr::select(-`# ofConnect`,-`# I/Cw/other PWS`) %>% spread(PopulationType,PopulationServed,sep = '_Population_')
sc_temp = inter_temp %>% dplyr::select(-PopulationServed,-`# I/Cw/other PWS`) %>% spread( PopulationType,`# ofConnect`,sep = '_ServiceConnections_')
}else{pop_temp = NA;sc_temp=NA}
interconnects_temp = sum(as.numeric(inter_temp$`# I/Cw/other PWS`))
cn_temp = base_page %>% html_nodes(css_cn) %>% html_text(trim=T) %>% matrix(.,ncol=2,byrow=T) %>% .[-1,] %>% matrix(.,ncol=2) %>% data.frame(.,stringsAsFactors = F) %>% mutate(CN_ID = paste('CN',1:nrow(.),sep='_'))
org_cn_temp = cn_temp %>% dplyr::select(-X2) %>% spread(CN_ID,X1)
colnames(org_cn_temp) = gsub('CN_','CN_ORG_',colnames(org_cn_temp))
id_cn_temp = cn_temp %>% dplyr::select(-X1) %>% spread(CN_ID,X2)
cn_bind_temp = cbind(org_cn_temp,id_cn_temp)
df = data.frame(PWS_ID = str_extract(quers[x],'TX[0-9]{1,}'),
cbind(matrix(base_page %>% html_nodes(css_owner) %>% html_text(trim=T) ,nrow = 1,dimnames = list(x,'Owner_Type')),
matrix(base_page %>% html_nodes(css_rn) %>% html_text(trim=T) ,nrow=1,dimnames = list(x,c('PWS_ID_EX','PWS_NAME','RN'))),
rbind(flow_temp),
cn_bind_temp,
pop_temp,sc_temp),
Interconnections = interconnects_temp,
stringsAsFactors = F)
df})
},cl = 8)
owner_list = pblapply(seq_along(quers),function(x) {
print(x)
rm(list = grep('temp',ls(),value=T))
tryCatch({
base_page = quers[x] %>% read_html()
flow_temp = base_page %>% html_nodes(css_flow) %>% html_text(trim=T) %>% matrix(.,nrow=2,byrow = T)
colnames(flow_temp) <- flow_temp[1,]
flow_temp = flow_temp[-1,]
inter_temp = base_page %>% html_nodes(css_inter) %>% html_text(trim=T) #%>% matrix(.,nrow=2,byrow = T)
table_nodes = base_page %>% html_nodes('table')
table_nodes = table_nodes[!sapply(sapply(seq_along(table_nodes),function(t) tryCatch({html_table(table_nodes[[t]],fill=T,trim=T)},error = function(e) NULL)),is.null)]
table_list = html_table(table_nodes,trim=T,fill=T)
inter_temp = table_list[[which(grepl('w/other PWS',table_list,fixed = T ))[2]]]
colnames(inter_temp) <- inter_temp[1,]
inter_temp = inter_temp[-1,]
if(nrow(inter_temp)>0){pop_temp = inter_temp %>% dplyr::select(-`# ofConnect`,-`# I/Cw/other PWS`) %>% spread(PopulationType,PopulationServed,sep = '_Population_')
sc_temp = inter_temp %>% dplyr::select(-PopulationServed,-`# I/Cw/other PWS`) %>% spread( PopulationType,`# ofConnect`,sep = '_ServiceConnections_')
}else{pop_temp = NA;sc_temp=NA}
interconnects_temp = sum(as.numeric(inter_temp$`# I/Cw/other PWS`))
cn_temp = base_page %>% html_nodes(css_cn) %>% html_text(trim=T) %>% matrix(.,ncol=2,byrow=T) %>% .[-1,] %>% matrix(.,ncol=2) %>% data.frame(.,stringsAsFactors = F) %>% mutate(CN_ID = paste('CN',1:nrow(.),sep='_'))
org_cn_temp = cn_temp %>% dplyr::select(-X2) %>% spread(CN_ID,X1)
colnames(org_cn_temp) = gsub('CN_','CN_ORG_',colnames(org_cn_temp))
id_cn_temp = cn_temp %>% dplyr::select(-X1) %>% spread(CN_ID,X2)
cn_bind_temp = cbind(org_cn_temp,id_cn_temp)
df = data.frame(PWS_ID = str_extract(quers[x],'TX[0-9]{1,}'),
cbind(matrix(base_page %>% html_nodes(css_owner) %>% html_text(trim=T) ,nrow = 1,dimnames = list(x,'Owner_Type')),
matrix(base_page %>% html_nodes(css_rn) %>% html_text(trim=T) ,nrow=1,dimnames = list(x,c('PWS_ID_EX','PWS_NAME','RN'))),
rbind(flow_temp),
cn_bind_temp,
pop_temp,sc_temp),
Interconnections = interconnects_temp,
stringsAsFactors = F)
df})
},cl = 8)
while(any(sapply(owner_list,class)=='try-error')){
index = which(sapply(owner_list,class)=='try-error')
for(x in index){
rm(list = grep('temp',ls(),value=T))
tryCatch({
base_page = quers[x] %>% read_html()
flow_temp = base_page %>% html_nodes(css_flow) %>% html_text(trim=T) %>% matrix(.,nrow=2,byrow = T)
colnames(flow_temp) <- flow_temp[1,]
flow_temp = flow_temp[-1,]
inter_temp = base_page %>% html_nodes(css_inter) %>% html_text(trim=T) #%>% matrix(.,nrow=2,byrow = T)
table_nodes = base_page %>% html_nodes('table')
table_nodes = table_nodes[!sapply(sapply(seq_along(table_nodes),function(t) tryCatch({html_table(table_nodes[[t]],fill=T,trim=T)},error = function(e) NULL)),is.null)]
table_list = html_table(table_nodes,trim=T,fill=T)
inter_temp = table_list[[which(grepl('w/other PWS',table_list,fixed = T ))[2]]]
colnames(inter_temp) <- inter_temp[1,]
inter_temp = inter_temp[-1,]
if(nrow(inter_temp)>0){pop_temp = inter_temp %>% dplyr::select(-`# ofConnect`,-`# I/Cw/other PWS`) %>% spread(PopulationType,PopulationServed,sep = '_Population_')
sc_temp = inter_temp %>% dplyr::select(-PopulationServed,-`# I/Cw/other PWS`) %>% spread( PopulationType,`# ofConnect`,sep = '_ServiceConnections_')
}else{pop_temp = NA;sc_temp=NA}
interconnects_temp = sum(as.numeric(inter_temp$`# I/Cw/other PWS`))
cn_temp = base_page %>% html_nodes(css_cn) %>% html_text(trim=T) %>% matrix(.,ncol=2,byrow=T) %>% .[-1,] %>% matrix(.,ncol=2) %>% data.frame(.,stringsAsFactors = F) %>% mutate(CN_ID = paste('CN',1:nrow(.),sep='_'))
org_cn_temp = cn_temp %>% dplyr::select(-X2) %>% spread(CN_ID,X1)
colnames(org_cn_temp) = gsub('CN_','CN_ORG_',colnames(org_cn_temp))
id_cn_temp = cn_temp %>% dplyr::select(-X1) %>% spread(CN_ID,X2)
cn_bind_temp = cbind(org_cn_temp,id_cn_temp)
df = data.frame(PWS_ID = str_extract(quers[x],'TX[0-9]{1,}'),
cbind(matrix(base_page %>% html_nodes(css_owner) %>% html_text(trim=T) ,nrow = 1,dimnames = list(x,'Owner_Type')),
matrix(base_page %>% html_nodes(css_rn) %>% html_text(trim=T) ,nrow=1,dimnames = list(x,c('PWS_ID_EX','PWS_NAME','RN'))),
rbind(flow_temp),
cn_bind_temp,
pop_temp,sc_temp),
Interconnections = interconnects_temp,
stringsAsFactors = F)
owner_list[[x]]<-df
})
}}
owner_df = do.call(plyr::rbind.fill,owner_list[sapply(owner_list,class)!='try-error'])
owner_df$Total_Storage_Units = str_extract(owner_df$TotalStorage.MG.,'[A-Z]{1,}')
owner_df$Total_Storage_MG = as.numeric(gsub(' [A-Z]{1,}$','',owner_df$TotalStorage.MG.))
owner_df$Total_Storage_MG = ifelse(is.na(owner_df$Total_Storage_MG ),NA,ifelse(owner_df$Total_Storage_Units=='MG',owner_df$Total_Storage_MG ,owner_df$Total_Storage_MG/1000000))
owner_df$Total_Production_Units = str_extract(owner_df$TotalProduct.MGD.,'[A-Z]{1,}')
owner_df$Total_Product_MGD = as.numeric(gsub(' [A-Z]{1,}$','',owner_df$TotalProduct.MGD.))
owner_df$Total_Product_MGD = ifelse(is.na(owner_df$Total_Product_MGD),NA,ifelse(owner_df$Total_Production_Units=='MG',owner_df$Total_Product_MGD,owner_df$Total_Product_MGD/1000000))
owner_df$Avg_Daily_Consumption_Units = str_extract(owner_df$AverageDailyConsump.,'[A-Z]{1,}')
owner_df$Average_Daily_Consump_MGD = as.numeric(gsub(' [A-Z]{1,}$','',owner_df$AverageDailyConsump.))
owner_df$Avg_Daily_Consumption_Units[is.na(owner_df$Average_Daily_Consump_MGD)] <- NA
owner_df$Average_Daily_Consump_MGD[!is.na(owner_df$Average_Daily_Consump_MGD)&owner_df$Avg_Daily_Consumption_Units == 'GPM'] <-
owner_df$Average_Daily_Consump_MGD[!is.na(owner_df$Average_Daily_Consump_MGD)&owner_df$Avg_Daily_Consumption_Units == 'GPM']  * 1440  / 1000000
saveRDS(owner_df,paste0(paste0('scraped_input/pws_details/pws_details_',Sys.Date(),'.RDS')))
head(owner_df)
saveRDS(owner_df,paste0(paste0('input/pws_details/pws_details_',Sys.Date(),'.RDS')))
saveRDS(owner_df,paste0(paste0('input/texas_dww/pws_details_',Sys.Date(),'.RDS')))
#$ sudo docker run -d -p 4445:4444 selenium/standalone-firefox:2.53.0
#$ sudo docker ps
library(parallel)
library(rvest)
library(tidyverse)
library(stringr)
library(stringi)
#empty_df = read_csv('test.csv')
library(lubridate)
if(any(list.files('scraped_input/tceq_audits/') == 'district_audit_reference_sheet.csv'))
{doc_df = read_csv('scraped_input/tceq_audits/district_audit_reference_sheet.csv') %>% mutate(DOC_ID = as.character(DOC_ID),
DISTRICT_ID = as.character(DISTRICT_ID))}
if(!any(list.files('scraped_input/tceq_audits/') == 'district_audit_reference_sheet.csv'))
{doc_df = data.frame()}
audit_links = 'https://www14.tceq.texas.gov/iwud/document/index.cfm?fuseaction=ListDocumentsByType&COMMAND=LIST&DocType=Audit-District'
audit_session = rvest::html_session(audit_links)
audit_session
go_on = TRUE
while(go_on)
{
go_on = FALSE
css = 'form+ table .iwud'
td = audit_session %>% read_html() %>% html_nodes(css = css)
links = matrix(paste0('https://www14.tceq.texas.gov',td %>% html_nodes("a") %>% html_attr('href')),ncol=2,byrow=T)
text = td %>% html_text(trim=T) %>% matrix(.,ncol=6,byrow=T)
temp_df = data.frame(text,links) %>% rename(DISTRICT_NAME = X1,DISTRICT_ID = X2,DOC_ID = X4,DATE_SUBMITTED = X5,
DISTRICT_URL = X1.1,DOC_URL = X2.1) %>%
dplyr::select(-X6,-X3) %>% mutate(DISTRICT_ID = gsub('[A-Za-z]| ','',DISTRICT_ID))
if(all(temp_df$DOC_ID %in% doc_df$DOC_ID)){break}
temp_df = temp_df %>% filter(!DOC_ID %in% doc_df$DOC_ID)
if(nrow(doc_df)==0){doc_df = temp_df}
if(nrow(doc_df)!=0){doc_df = full_join(doc_df,temp_df)}
if(any((audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('alt')) == 'Next page'))
{
audit_session <- audit_session %>% follow_link(i =
intersect(which(audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('alt') == 'Next page'),
which(audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('name') == 'next')))
go_on = TRUE}}
audit_links = 'https://www14.tceq.texas.gov/iwud/document/index.cfm?fuseaction=ListDocumentsByType&COMMAND=LIST&DocType=Audit'
audit_session = rvest::html_session(audit_links)
go_on = TRUE
while(go_on)
{go_on = FALSE
css = 'form+ table .iwud'
td = audit_session %>% read_html() %>% html_nodes(css = css)
links = matrix(paste0('https://www14.tceq.texas.gov',td %>% html_nodes("a") %>% html_attr('href')),ncol=2,byrow=T)
text = td %>% html_text(trim=T) %>% matrix(.,ncol=6,byrow=T)
temp_df = data.frame(text,links) %>% rename(DISTRICT_NAME = X1,DISTRICT_ID = X2,DOC_ID = X4,DATE_SUBMITTED = X5,
DISTRICT_URL = X1.1,DOC_URL = X2.1) %>%
dplyr::select(-X6,-X3) %>% mutate(DISTRICT_ID = gsub('[A-Za-z]| ','',DISTRICT_ID))
if(all(temp_df$DOC_ID %in% doc_df$DOC_ID)){break}
temp_df = temp_df %>% filter(!DOC_ID %in% doc_df$DOC_ID)
if(nrow(doc_df)==0){doc_df = temp_df}
if(nrow(doc_df)!=0){doc_df = full_join(doc_df,temp_df)}
if(any((audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('alt')) == 'Next page'))
{
audit_session <- audit_session %>% follow_link(i =
intersect(which(audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('alt') == 'Next page'),
which(audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('name') == 'next')))
go_on = TRUE}}
doc_df
write_csv(doc_df,'scraped_input/tceq_audits/district_audit_reference_sheet.csv')
write_csv(doc_df,'input/tceq_audits/district_audit_reference_sheet.csv')
rm(list=ls())
if(any(list.files('scraped_input/tceq_audits/') == 'district_audits.csv'))
{audit_df = read_csv('scraped_input/tceq_audits/district_audits.csv',trim_ws = T)
for (c in colnames(audit_df))
{audit_df[[c]] <- as.character(audit_df[[c]])}}
if(!any(list.files('scraped_input/tceq_audits/') == 'district_audits.csv'))
{audit_df = data.frame()}
library(pbapply)
doc_df = read_csv('scraped_input/tceq_audits/district_audit_reference_sheet.csv')
rm(list=ls())
if(any(list.files('input/tceq_audits/') == 'district_audits.csv'))
{audit_df = read_csv('input/tceq_audits/district_audits.csv',trim_ws = T)
for (c in colnames(audit_df))
{audit_df[[c]] <- as.character(audit_df[[c]])}}
if(!any(list.files('scraped_input/tceq_audits/') == 'district_audits.csv'))
{audit_df = data.frame()}
library(pbapply)
doc_df = read_csv('input/tceq_audits/district_audit_reference_sheet.csv')
new_audits = doc_df %>% filter(!DOC_ID %in% audit_df$DOC_ID)
if(nrow(new_audits)!=0){
audit_list = pblapply(1:nrow(new_audits),function(i) as.character(new_audits$DOC_URL[i]) %>% read_html() %>% html_nodes(css = 'td.iwud') %>% html_text(trim=T) %>% matrix(.,ncol=2,byrow=T) %>%
as.data.frame(.,stringsAsFactors = FALSE) %>% spread(V1,V2) %>%
mutate(DOC_URL = new_audits$DOC_URL[i],DOC_ID = new_audits$DOC_ID[i],
DISTRICT_ID = new_audits$DISTRICT_ID[i],
DISTRICT_NAME = new_audits$DISTRICT_NAME[i],
DISTRICT_URL = new_audits$DOC_URL[i],DATE_SUBMITTED = new_audits$DATE_SUBMITTED[i]))
new_audit_df <- invisible(Reduce(full_join,audit_list))
for (c in colnames(new_audit_df))
{new_audit_df[[c]] <- as.character(new_audit_df[[c]])}}
operator_css_selector = 'table:nth-child(18)'
system_number_css = "#AutoNumber7 td:nth-child(1) a"
library(magrittr)
system_operators_table_list = pblapply(data_sheet_urls,function(x) {#print(x);
Sys.sleep(0.05)
gsub(' ','',paste0(prefix,x)) %>% read_html() %>% rvest::html_node(operator_css_selector) %>%
html_table() %>% mutate(System = str_extract(x,'TX[0-9]{7}'))},cl = 4)
operator_css_selector = 'table:nth-child(18)'
system_number_css = "#AutoNumber7 td:nth-child(1) a"
library(magrittr)
system_operators_table_list = pblapply(data_sheet_urls,function(x) {#print(x);
Sys.sleep(0.05)
gsub(' ','',paste0(prefix,x)) %>% read_html() %>% rvest::html_node(operator_css_selector) %>%
html_table() %>% mutate(System = str_extract(x,'TX[0-9]{7}'))},cl = 4)
#$ sudo docker run -d -p 4445:4444 selenium/standalone-firefox:2.53.0
#$ sudo docker ps
library(parallel)
library(rvest)
library(tidyverse)
library(stringr)
library(stringi)
#empty_df = read_csv('test.csv')
library(lubridate)
#slackr_setup(config_file = '../proj3/.slackr')
base_site = 'https://dww2.tceq.texas.gov/DWW/JSP/SearchDispatch?number=&name=&ActivityStatusCD=All&county=All&WaterSystemType=C&SourceWaterType=All&SampleType=null&begin_date=4%2F19%2F2015&end_date=4%2F19%2F2017&action=Search+For+Water+Systems'
#length(system_summary_urls)
prefix = 'https://dww2.tceq.texas.gov/DWW/JSP/'
page_links = base_site %>% read_html() %>% html_nodes('a')
data_sheet_urls = page_links[grepl('Summary',page_links %>% html_text(trim=T))] %>% html_attr('href')
operator_css_selector = 'table:nth-child(18)'
system_number_css = "#AutoNumber7 td:nth-child(1) a"
library(magrittr)
system_operators_table_list = pblapply(data_sheet_urls,function(x) {#print(x);
Sys.sleep(0.05)
gsub(' ','',paste0(prefix,x)) %>% read_html() %>% rvest::html_node(operator_css_selector) %>%
html_table() %>% mutate(System = str_extract(x,'TX[0-9]{7}'))},cl = 4)
system_operators_df = do.call(rbind,system_operators_table_list[!sapply(system_operators_table_list,function(x) x$X1[1]=='No Licensing Data for this PWS')])
drought_site = 'https://www.tceq.texas.gov/drinkingwater/trot/droughtw.html'
dtable = drought_site %>% read_html() %>% html_table(fill=T,header=T)
write_csv(dtable[[1]],paste('scraped_input/texas_dww/system_water_restrictions',paste0(Sys.Date(),'.csv'),sep='_'))
drought_site = 'https://www.tceq.texas.gov/drinkingwater/trot/droughtw.html'
dtable = drought_site %>% read_html() %>% html_table(fill=T,header=T)
write_csv(dtable[[1]],paste('input/texas_dww/system_water_restrictions',paste0(Sys.Date(),'.csv'),sep='_'))
operator_css_selector = 'table:nth-child(18)'
system_number_css = "#AutoNumber7 td:nth-child(1) a"
library(magrittr)
system_operators_table_list = pblapply(data_sheet_urls,function(x) {#print(x);
Sys.sleep(0.05)
gsub(' ','',paste0(prefix,x)) %>% read_html() %>% rvest::html_node(operator_css_selector) %>%
html_table() %>% mutate(System = str_extract(x,'TX[0-9]{7}'))},cl = 4)
warnings()
system_operators_df = do.call(rbind,system_operators_table_list[!sapply(system_operators_table_list,function(x) x$X1[1]=='No Licensing Data for this PWS')])
system_operators_table_list[[1]]
system_operators_df = do.call(rbind,system_operators_table_list[!sapply(system_operators_table_list,function(x) x$X1[1]=='No Licensing Data for this PWS')])
sapply(system_operators_table_list,class)
table(sapply(system_operators_table_list,class))
system_operators_table_list
system_operators_table_list[sapply(system_operators_table_list,is.null)]
system_operators_table_list <- system_operators_table_list[!sapply(system_operators_table_list,is.null)]
system_operators_df = do.call(rbind,system_operators_table_list[!sapply(system_operators_table_list,function(x) x$X1[1]=='No Licensing Data for this PWS')])
nosystem_operators_df = do.call(rbind,system_operators_table_list[sapply(system_operators_table_list,function(x) x$X1[1]=='No Licensing Data for this PWS')])
system_operators_df = cbind(system_operators_df[grepl('License',system_operators_df$X1),] %>% select(-X3,-X1) %>% rename(LICENSE_HOLDER = X2),
system_operators_df[!grepl('License',system_operators_df$X1),] %>% select(-System) %>% rename(CLASSIFICATION = X2,LICENSE_NUM = X3))
system_operators_df = full_join(system_operators_df ,nosystem_operators_df %>% rename(LICENSE_HOLDER = X1))
write.csv(system_operators_df,paste('input/texas_dww/licensed_operators',paste0(Sys.Date(),'.csv'),sep='_'))
#$ sudo docker run -d -p 4445:4444 selenium/standalone-firefox:2.53.0
#$ sudo docker ps
library(parallel)
library(rvest)
library(tidyverse)
library(stringr)
library(stringi)
#empty_df = read_csv('test.csv')
library(slackr)
#$ sudo docker run -d -p 4445:4444 selenium/standalone-firefox:2.53.0
#$ sudo docker ps
library(parallel)
library(rvest)
library(tidyverse)
library(stringr)
library(stringi)
library(lubridate)
library(magrittr)
#slackr_setup(config_file = '../proj3/.slackr')
base_site = 'https://dww2.tceq.texas.gov/DWW/JSP/SearchDispatch?number=&name=&ActivityStatusCD=All&county=All&WaterSystemType=C&SourceWaterType=All&SampleType=null&begin_date=4%2F19%2F2015&end_date=4%2F19%2F2017&action=Search+For+Water+Systems'
#length(system_summary_urls)
prefix = 'https://dww2.tceq.texas.gov/DWW/JSP/'
page_links = base_site %>% read_html() %>% html_nodes('a')
data_sheet_urls = page_links[grepl('Summary',page_links %>% html_text(trim=T))] %>% html_attr('href')
facility_sheet_urls = gsub(' ','',gsub('DataSheet','WaterSystemFacilities',data_sheet_urls))
facility_table_css = 'table:nth-child(9) td , table:nth-child(9) tr+ tr th'
facility_connections_css = 'table:nth-child(12) td , table:nth-child(12) tr+ tr th'
library(data.table)
facility_lists = mclapply(facility_sheet_urls,function(x) {
url = gsub(' ','',paste0(prefix,x))
ht = url %>% read_html()
gmaps = ht %>% html_nodes('a:contains(Google)') %>% html_attr('href')
facilities = ht %>% html_nodes('table') %>% .[[5]] %>% html_table(trim=T,fill=T)
colnames(facilities) <- gsub('\\r|\\t|\\n','',facilities[1,])
facilities = facilities[-1,]
facilities = data.table::data.table(apply(facilities,2,function(x) gsub('\\r|\\t|\\n','',x)))
facilities$PWS_ID = str_extract(x,'TX[0-9]{7}')
facility_connections = ht %>% html_nodes('table') %>% .[[6]] %>% html_table(trim=T,fill=T)
colnames(facility_connections) <- gsub('\\r|\\t|\\n','',facility_connections[1,])
facility_connections = facility_connections[-1,]
facility_connections = data.table::data.table(apply(facility_connections,2,function(x) gsub('\\r|\\t|\\n','',x)))
facility_connections$PWS_ID = str_extract(x,'TX[0-9]{7}')
facilities$Google_Maps[grepl('GoogleMaps',facilities$AerialView)] <- gmaps
list(facilities,facility_connections)
},mc.cores = 4,mc.cleanup = T,mc.preschedule = T)
faclist = lapply(facility_lists,function(x) x[[1]])
conlist = lapply(facility_lists,function(x) x[[2]])
facility_dt = rbindlist(faclist,fill = T)
facility_connection_dt = rbindlist(conlist,fill = T)
write_csv(facility_dt,paste('input/texas_dww/system_facilities',paste0(Sys.Date(),'.csv'),sep='_'))
write_csv(facility_connection_dt,paste('input/texas_dww/system_facility_connections',paste0(Sys.Date(),'.csv'),sep='_'))
packs = c('rgeos','rgdal','sp','maptools','readxl','hhi','spdep','lubridate',
'rvest','R.utils','pbapply','jsonlite','tidyverse','data.table','sf','tigris','lwgeom','tidyquant')
need = packs[!packs %in% installed.packages()[,'Package']]
sapply(need,install.packages)
sapply(packs,require,character.only = T)
if(!require(lucr)){remotes::install_github('Ironholds/lucr');require(lucr)}
dinfo_dt = fread('input/district_list_2019-03-08.csv',stringsAsFactors = F,na.strings = "")
fl <- list.files('input/',recursive = T,full = T)
grep('district_list',fl,value = T)
dinfo_dt = fread('input/district_list_2019-03-08.csv',stringsAsFactors = F,na.strings = "")
grep('district_list',fl,value = T)
dinfo_dt = fread('input/twdd_records./district_list_2019-03-08.csv',stringsAsFactors = F,na.strings = "")
dinfo_dt = fread('input/twdd_records/district_list_2019-03-08.csv',stringsAsFactors = F,na.strings = "")
iwdd_base = "http://www14.tceq.texas.gov/iwud/dist/index.cfm?fuseaction=ListDistricts&Command=list"
i = 0
library(rvest)
library(tidyverse)
library(pbapply)
base_sess = html_session(iwdd_base)
iwdd_base = "http://www14.tceq.texas.gov/iwud/dist/index.cfm?fuseaction=ListDistricts&Command=list"
i = 0
library(rvest)
library(tidyverse)
library(pbapply)
base_sess = html_session(iwdd_base)
base_sess <- iwdd_base %>% GET(., timeout(10)) %>% html_session
library(curl)
base_sess <- iwdd_base %>% GET(., timeout(10)) %>% html_session
library(RCurl)
base_sess <- iwdd_base %>% GET(., timeout(10)) %>% html_session
library(httr)
base_sess <- iwdd_base %>% GET(., timeout(10)) %>% html_session
base_sess <- iwdd_base %>% GET(., timeout(10))
base_sess <- iwdd_base %>% GET(., timeout(20))
base_sess = html_session(iwdd_base)
httr::GET(iwdd_base, config = httr::config(connecttimeout = 60))
install.packages('httr')
install.packages("httr")
test <- httr::GET(iwdd_base, config = httr::config(connecttimeout = 20))
iwdd_base = "https://www14.tceq.texas.gov/iwud/dist/index.cfm?fuseaction=ListDistricts&COMMAND=LIST"
base_sess = html_session(iwdd_base)
page_html = base_sess %>% read_html()
dtable = page_html %>% html_nodes('table') %>% html_table(trim=T,fill=T)
temp_table = dtable[[5]][-c(1,2),-1]
temp_table = temp_table[rowSums(temp_table=='') < ncol(temp_table),]
temp_table$URL = NA
url_list = lapply(seq_along(temp_table$X2),function(x) {
if(temp_table$X2[x] %in% (page_html %>% html_nodes('table+ table .iwud a') %>% html_text(trim=T)))
(page_html %>% html_nodes('table+ table .iwud a') %>% html_attr('href'))[which((page_html %>% html_nodes('table+ table .iwud a') %>% html_text(trim=T)) == temp_table$X2[x])]
else{NA}
})
temp_table$URL = unlist(url_list)[!duplicated(unlist(url_list))]
img_nodes = base_sess %>% read_html() %>% html_nodes('img')
district_links = list()
i = 1
district_links[[i]] = unlist(base_sess %>% read_html() %>% html_nodes('table+ table .iwud a') %>% html_attr('href'))
continue_sess = base_sess
while(any(img_nodes %>% html_attr('name') == 'next') & all(img_nodes %>% html_attr('alt') != 'No next page')){
i = i + 1
next_page_link = which(img_nodes %>% html_attr('name') == 'next')
continue_sess = follow_link(x = continue_sess,i = next_page_link)
district_links[[i]] <- unlist(continue_sess %>% read_html() %>% html_nodes('table+ table .iwud a') %>% html_attr('href'))
img_nodes = continue_sess %>% read_html() %>% html_nodes('img')
}
id = page_html %>% html_nodes('.iwud+ .iwud:nth-child(3)') %>% html_text(trim=T)
status = base_sess %>% read_html() %>% html_nodes('.iwud~ .iwud+ .iwud') %>% html_text(trim=T)
name = page_html %>% html_nodes('.iwud+ .iwud:nth-child(3)') %>% html_text(trim=T)
district_links = unlist(district_links)
saveRDS(unlist(district_links),'scratch/texas_water_district_pages.RDS')
saveRDS(unlist(district_links),'input/texas_water_district_pages.RDS')
district_links = readRDS('input/texas_water_district_pages.RDS')
css_district_id = "table:nth-child(5) tr:nth-child(1) .iwud+ .iwuddata"
css_ccn = "table:nth-child(5) tr+ tr .iwud+ .iwuddata"
css_acres = "table:nth-child(11) tr:nth-child(1) .iwuddata"
css_created = "tr:nth-child(2) .iwuddata~ .iwud+ .iwuddata"
css_board = ".iwuddata b"
css_created = "table:nth-child(9) tr:nth-child(1) .iwuddata:nth-child(2)"
css_ended = "table:nth-child(9) tr:nth-child(1) .iwuddata~ .iwuddata"
css_num_directors = "table+ table tr:nth-child(3) .iwuddata:nth-child(2)"
css_name = "table+ table .iwuddata:nth-child(1)"
css_type = "table:nth-child(8) .iwuddata~ .iwuddata"
css_status = "table:nth-child(8) tr:nth-child(1) .iwuddata:nth-child(2)"
css_primary_county = "table+ table tr:nth-child(4) .iwuddata"
which(district_links == "index.cfm?fuseaction=DetailDistrict&ID=12694&command=list&name=RED%20RIVER%20AUTHORITY%20OF%20TEXAS")
info_list = pblapply(seq_along(district_links),function(x){
#print(x)
url = paste0('http://www14.tceq.texas.gov/iwud/dist/',district_links[x])
district_session = html_session(url)
link_urls = district_session  %>% read_html() %>% html_nodes('a') %>% html_attr('href')
i_link = which({district_session %>% read_html() %>% html_nodes('a') %>% html_text(trim=T)} == "Run District Information Report")
district_info_session = follow_link(x = district_session,i = i_link)
district_info_html = district_info_session %>% read_html()
tdf = data.frame(PWS_ID = paste(str_extract(if(any(grepl('DWW',link_urls))){grep('DWW',link_urls,value=T)}else{NA},'TX[0-9]{1,}'),collapse = '|'),
Info_Link = i_link,
District_ID = district_info_html %>% html_node(css_district_id) %>% html_text(trim=T),
District_Name = district_info_html %>% html_node(css_name) %>% html_text(trim=T),
Status = district_info_html %>% html_node(css_status) %>% html_text(trim=T),
Created = district_info_html %>% html_node(css_created) %>% html_text(trim=T),
Ended = district_info_html %>% html_node(css_ended) %>% html_text(trim=T),
Type = district_info_html %>% html_node(css_type) %>% html_text(trim=T),
CCN = district_info_html %>% html_node(css_ccn) %>% html_text(trim=T),
Primary_County = district_info_html %>% html_node(css_primary_county) %>% html_text(trim=T),
BOARD_NUMBER = district_info_html %>% html_node(css_num_directors) %>% html_text(trim=T),
BOARD_SELECTION = district_info_html %>% html_node(css_board) %>% html_text(trim=T),
ACRES = district_info_html %>% html_node(css_acres) %>% html_text(trim=T),stringsAsFactors = F)
Sys.sleep(0.15)
tdf})
district_links = readRDS('input/texas_water_district_pages.RDS')
css_district_id = "table:nth-child(5) tr:nth-child(1) .iwud+ .iwuddata"
css_ccn = "table:nth-child(5) tr+ tr .iwud+ .iwuddata"
css_acres = "table:nth-child(11) tr:nth-child(1) .iwuddata"
css_created = "tr:nth-child(2) .iwuddata~ .iwud+ .iwuddata"
css_board = ".iwuddata b"
css_created = "table:nth-child(9) tr:nth-child(1) .iwuddata:nth-child(2)"
css_ended = "table:nth-child(9) tr:nth-child(1) .iwuddata~ .iwuddata"
css_num_directors = "table+ table tr:nth-child(3) .iwuddata:nth-child(2)"
css_name = "table+ table .iwuddata:nth-child(1)"
css_type = "table:nth-child(8) .iwuddata~ .iwuddata"
css_status = "table:nth-child(8) tr:nth-child(1) .iwuddata:nth-child(2)"
css_primary_county = "table+ table tr:nth-child(4) .iwuddata"
which(district_links == "index.cfm?fuseaction=DetailDistrict&ID=12694&command=list&name=RED%20RIVER%20AUTHORITY%20OF%20TEXAS")
info_list = pblapply(seq_along(district_links),function(x){
#print(x)
url = paste0('https://www14.tceq.texas.gov/iwud/dist/',district_links[x])
district_session = html_session(url)
link_urls = district_session  %>% read_html() %>% html_nodes('a') %>% html_attr('href')
i_link = which({district_session %>% read_html() %>% html_nodes('a') %>% html_text(trim=T)} == "Run District Information Report")
district_info_session = follow_link(x = district_session,i = i_link)
district_info_html = district_info_session %>% read_html()
tdf = data.frame(PWS_ID = paste(str_extract(if(any(grepl('DWW',link_urls))){grep('DWW',link_urls,value=T)}else{NA},'TX[0-9]{1,}'),collapse = '|'),
Info_Link = i_link,
District_ID = district_info_html %>% html_node(css_district_id) %>% html_text(trim=T),
District_Name = district_info_html %>% html_node(css_name) %>% html_text(trim=T),
Status = district_info_html %>% html_node(css_status) %>% html_text(trim=T),
Created = district_info_html %>% html_node(css_created) %>% html_text(trim=T),
Ended = district_info_html %>% html_node(css_ended) %>% html_text(trim=T),
Type = district_info_html %>% html_node(css_type) %>% html_text(trim=T),
CCN = district_info_html %>% html_node(css_ccn) %>% html_text(trim=T),
Primary_County = district_info_html %>% html_node(css_primary_county) %>% html_text(trim=T),
BOARD_NUMBER = district_info_html %>% html_node(css_num_directors) %>% html_text(trim=T),
BOARD_SELECTION = district_info_html %>% html_node(css_board) %>% html_text(trim=T),
ACRES = district_info_html %>% html_node(css_acres) %>% html_text(trim=T),stringsAsFactors = F)
Sys.sleep(0.15)
tdf})
dinfo_dt = fread('input/twdd_records/district_list_2019-03-08.csv',stringsAsFactors = F,na.strings = "")
packs = c('rgeos','rgdal','sp','maptools','readxl','hhi','spdep','lubridate',
'rvest','R.utils','pbapply','jsonlite','tidyverse','data.table','sf','tigris','lwgeom','tidyquant')
need = packs[!packs %in% installed.packages()[,'Package']]
sapply(need,install.packages)
sapply(packs,require,character.only = T)
#if(!require(lucr)){remotes::install_github('Ironholds/lucr');require(lucr)}
fl <- list.files('input/',recursive = T,full = T)
grep('district_list',fl,value = T)
dinfo_dt = fread('input/twdd_records/district_list_2019-03-08.csv',stringsAsFactors = F,na.strings = "")
dinfo_dt$PWS_ID[dinfo_dt$PWS_ID == "NA"] <- NA
dinfo_dt$District_ID = as.character(dinfo_dt$District_ID)
library(sf)
install.packages('sf')
library(sf)
install.packages('sf')
install.packages('units')
install.packages('sf')
install.packages('units')
install.packages('units', configure.args = c('--with-udunits2-include=/homebrew/bin/udunits2'))
install.packages('units', configure.args = c('--with-udunits2-lib=~/homebrew/bin/udunits2'))
install.packages('units', configure.args = c('--with-udunits2-include=~/homebrew/bin/udunits2'))
