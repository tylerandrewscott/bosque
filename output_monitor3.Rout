
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #$ sudo docker run -d -p 4445:4444 selenium/standalone-firefox:2.53.0
> #$ sudo docker ps
> library(parallel)
> library(rvest)
Loading required package: xml2
> library(tidyverse)
â”€â”€ [1mAttaching packages[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.0 â”€â”€
[32mâœ“[39m [34mggplot2[39m 3.3.2     [32mâœ“[39m [34mpurrr  [39m 0.3.4
[32mâœ“[39m [34mtibble [39m 3.0.4     [32mâœ“[39m [34mdplyr  [39m 1.0.2
[32mâœ“[39m [34mtidyr  [39m 1.1.1     [32mâœ“[39m [34mstringr[39m 1.4.0
[32mâœ“[39m [34mreadr  [39m 1.3.1     [32mâœ“[39m [34mforcats[39m 0.5.0
â”€â”€ [1mConflicts[22m â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€
[31mx[39m [34mdplyr[39m::[32mfilter()[39m         masks [34mstats[39m::filter()
[31mx[39m [34mreadr[39m::[32mguess_encoding()[39m masks [34mrvest[39m::guess_encoding()
[31mx[39m [34mdplyr[39m::[32mlag()[39m            masks [34mstats[39m::lag()
[31mx[39m [34mpurrr[39m::[32mpluck()[39m          masks [34mrvest[39m::pluck()
> 
> library(stringr)
> library(stringi)
> #empty_df = read_csv('test.csv')
> 
> library(lubridate)

Attaching package: â€˜lubridateâ€™

The following objects are masked from â€˜package:baseâ€™:

    date, intersect, setdiff, union

> 
> if(any(list.files('input/tceq_audits/') == 'district_audit_reference_sheet.csv'))
+ {doc_df = read_csv('input/tceq_audits/district_audit_reference_sheet.csv') %>% mutate(DOC_ID = as.character(DOC_ID),
+                                                                                       DISTRICT_ID = as.character(DISTRICT_ID))}
Parsed with column specification:
cols(
  DISTRICT_NAME = [31mcol_character()[39m,
  DISTRICT_ID = [32mcol_double()[39m,
  DOC_ID = [32mcol_double()[39m,
  DATE_SUBMITTED = [31mcol_character()[39m,
  DISTRICT_URL = [31mcol_character()[39m,
  DOC_URL = [31mcol_character()[39m
)
> if(!any(list.files('input/tceq_audits/') == 'district_audit_reference_sheet.csv'))
+ {doc_df = data.frame()}
> 
> audit_links = 'https://www14.tceq.texas.gov/iwud/document/index.cfm?fuseaction=ListDocumentsByType&COMMAND=LIST&DocType=Audit-District'
> audit_session = rvest::html_session(audit_links)
> audit_session
<session> https://www14.tceq.texas.gov/iwud/document/index.cfm?fuseaction=ListDocumentsByType&COMMAND=LIST&DocType=Audit-District
  Status: 200
  Type:   text/html;charset=UTF-8
  Size:   78379
> go_on = TRUE
> while(go_on)
+ {go_on = FALSE
+ css = 'form+ table .iwud'
+ td = audit_session %>% read_html() %>% html_nodes(css = css)
+ links = matrix(paste0('https://www14.tceq.texas.gov',td %>% html_nodes("a") %>% html_attr('href')),ncol=2,byrow=T)
+ text = td %>% html_text(trim=T) %>% matrix(.,ncol=6,byrow=T)
+ temp_df = data.frame(text,links) %>% rename(DISTRICT_NAME = X1,DISTRICT_ID = X2,DOC_ID = X4,DATE_SUBMITTED = X5,
+                                             DISTRICT_URL = X1.1,DOC_URL = X2.1) %>% 
+   dplyr::select(-X6,-X3) %>% mutate(DISTRICT_ID = gsub('[A-Za-z]| ','',DISTRICT_ID))
+ if(all(temp_df$DOC_ID %in% doc_df$DOC_ID)){break}
+ temp_df = temp_df %>% filter(!DOC_ID %in% doc_df$DOC_ID)
+ if(nrow(doc_df)==0){doc_df = temp_df}
+ if(nrow(doc_df)!=0){doc_df = full_join(doc_df,temp_df)}
+ if(any((audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('alt')) == 'Next page'))
+ {
+ audit_session <- audit_session %>% follow_link(i = 
+                     intersect(which(audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('alt') == 'Next page'),
+                       which(audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('name') == 'next')))
+ go_on = TRUE}}
> 
> 
> 
> audit_links = 'https://www14.tceq.texas.gov/iwud/document/index.cfm?fuseaction=ListDocumentsByType&COMMAND=LIST&DocType=Audit'
> audit_session = rvest::html_session(audit_links)
> go_on = TRUE
> while(go_on)
+ {go_on = FALSE
+ css = 'form+ table .iwud'
+ td = audit_session %>% read_html() %>% html_nodes(css = css)
+ links = matrix(paste0('https://www14.tceq.texas.gov',td %>% html_nodes("a") %>% html_attr('href')),ncol=2,byrow=T)
+ text = td %>% html_text(trim=T) %>% matrix(.,ncol=6,byrow=T)
+ temp_df = data.frame(text,links) %>% rename(DISTRICT_NAME = X1,DISTRICT_ID = X2,DOC_ID = X4,DATE_SUBMITTED = X5,
+                                             DISTRICT_URL = X1.1,DOC_URL = X2.1) %>% 
+   dplyr::select(-X6,-X3) %>% mutate(DISTRICT_ID = gsub('[A-Za-z]| ','',DISTRICT_ID))
+ if(all(temp_df$DOC_ID %in% doc_df$DOC_ID)){break}
+ temp_df = temp_df %>% filter(!DOC_ID %in% doc_df$DOC_ID)
+ if(nrow(doc_df)==0){doc_df = temp_df}
+ if(nrow(doc_df)!=0){doc_df = full_join(doc_df,temp_df)}
+ if(any((audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('alt')) == 'Next page'))
+ {
+   audit_session <- audit_session %>% follow_link(i = 
+                                                    intersect(which(audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('alt') == 'Next page'),
+                                                              which(audit_session  %>% read_html() %>% html_nodes('img') %>% html_attr('name') == 'next')))
+   go_on = TRUE}}
> 
> write_csv(doc_df,'input/tceq_audits/district_audit_reference_sheet.csv')
> 
> 
> rm(list=ls())
> if(any(list.files('input/tceq_audits/') == 'district_audits.csv'))
+ {audit_df = read_csv('input/tceq_audits/district_audits.csv',trim_ws = T)
+ for (c in colnames(audit_df))
+ {audit_df[[c]] <- as.character(audit_df[[c]])}}
Parsed with column specification:
cols(
  .default = col_character(),
  DISTRICT_ID = [32mcol_double()[39m,
  DOC_ID = [32mcol_double()[39m,
  `DEBT SERVICE TAX RATE` = [32mcol_double()[39m,
  `OPERATIONS & MAINTENANCE TAX RATE` = [32mcol_double()[39m,
  `OTHER TAX RATES(S)` = [32mcol_double()[39m,
  `PERCENT OF LEVIED TAXES COLLECTED` = [32mcol_double()[39m,
  `TOTAL TAX RATE` = [32mcol_double()[39m,
  `WASTEWATER CUST - EQ SINGLE FAMILY UNITS` = [32mcol_double()[39m,
  `WATER CUSTOMERS - EQ SINGLE FAMILY UNITS` = [32mcol_double()[39m,
  YEAR = [32mcol_double()[39m,
  `FISCAL YEAR` = [33mcol_logical()[39m,
  `OTHER TAX RATE(S)` = [33mcol_logical()[39m,
  `WASTEWATER CUST - EQ SINGLE FAMILY UNIT` = [33mcol_logical()[39m
)
See spec(...) for full column specifications.
> 
> if(!any(list.files('input/tceq_audits/') == 'district_audits.csv'))
+ {audit_df = data.frame()}
> library(pbapply)
> doc_df = read_csv('input/tceq_audits/district_audit_reference_sheet.csv')
Parsed with column specification:
cols(
  DISTRICT_NAME = [31mcol_character()[39m,
  DISTRICT_ID = [32mcol_double()[39m,
  DOC_ID = [32mcol_double()[39m,
  DATE_SUBMITTED = [31mcol_character()[39m,
  DISTRICT_URL = [31mcol_character()[39m,
  DOC_URL = [31mcol_character()[39m
)
> new_audits = doc_df %>% filter(!DOC_ID %in% audit_df$DOC_ID)
> 
> if(nrow(new_audits)!=0){
+ audit_list = pblapply(1:nrow(new_audits),function(i) as.character(new_audits$DOC_URL[i]) %>% read_html() %>% html_nodes(css = 'td.iwud') %>% html_text(trim=T) %>% matrix(.,ncol=2,byrow=T) %>%
+     as.data.frame(.,stringsAsFactors = FALSE) %>% spread(V1,V2) %>% 
+     mutate(DOC_URL = new_audits$DOC_URL[i],DOC_ID = new_audits$DOC_ID[i],
+            DISTRICT_ID = new_audits$DISTRICT_ID[i],
+            DISTRICT_NAME = new_audits$DISTRICT_NAME[i],
+            DISTRICT_URL = new_audits$DOC_URL[i],DATE_SUBMITTED = new_audits$DATE_SUBMITTED[i]))
+ new_audit_df <- invisible(Reduce(full_join,audit_list))
+ for (c in colnames(new_audit_df))
+ {new_audit_df[[c]] <- as.character(new_audit_df[[c]])}}
> 
> 
> if(nrow(new_audits)!=0){
+ if(nrow(audit_df)==0)
+ {audit_df = new_audits}
+ if(nrow(audit_df!=0))
+ {audit_df = full_join(audit_df,new_audit_df)}
+ }
> write_csv(audit_df,paste('input/tceq_audits/district_audits.csv',sep='_'))
> 
> 
> 
> 
